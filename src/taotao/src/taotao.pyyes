import serial
import struct


def main():
	port = serial.Serial(port = "/dev/serial0",baudrate = 4800,parity = serial.PARITY_NONE,stopbits = serial.STOPBITS_ONE,bytesize = serial.EIGHTBITS,timeout = 10 )
	#port = serial.Serial("/dev/ttyACM0", baudrate=115200, timeout=3.0)
	#port.write(struct.pack('>B', 1))
	port.write("Hello")
	print(port.read())
	print('Send OK')
	port.close()



def test_port():
	test_string = "Testing 1 2 3 4".encode('utf-8')
	#test_string = b"Testing 1 2 3 4" ### Will also work

	port_list = ["/dev/serial0", "/dev/ttyAMA0", "/dev/serial1", "/dev/ttyS0"]

	for port in port_list:
		try:
			serialPort = serial.Serial(port, 9600, timeout = 2)
			serialPort.flushInput()
			serialPort.flushOutput()
			print("Opened port", port, "for testing:")
			bytes_sent = serialPort.write(test_string)
			print ("Sent", bytes_sent, "bytes")
			loopback = serialPort.read(bytes_sent)
			if loopback == test_string:
				print ("Received", len(loopback), "valid bytes, Serial port", port, "working \n")
			else:
				print ("Received incorrect data", loopback, "over Serial port", port, "loopback\n")
			serialPort.close()
		except IOError:
			print ("Failed at", port, "\n")

if __name__ == '__main__':
	main()

